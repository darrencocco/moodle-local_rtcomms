{"version":3,"sources":["../src/realtime.js"],"names":["define","PubSub","RealTimeEvents","api","params","channels","requestscounter","pollURL","ajax","XMLHttpRequest","json","failureCount","checkRequestCounter","curDate","Date","curTime","getTime","push","slice","length","publish","CONNECTION_LOST","poll","onreadystatechange","readyState","status","JSON","parse","responseText","setTimeout","timeout","success","multiplier","Math","min","trunc","pow","E","events","i","EVENT","fromid","index","url","encodeURIComponent","userid","token","contextstring","componentstring","areastring","itemidstring","fromtimestampstring","context","component","area","itemid","fromtimestamp","channelstring","open","send","plugin","init","userId","pollURLParam","setImplementation","subscribe","fromId","fromTimeStamp","channeltosubto"],"mappings":"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","sourcesContent":["/**\n * Real time events\n *\n * @module     realtimeplugin_phppollmuc/realtime\n * @package    realtimeplugin_phppollmuc\n * @copyright  2022 Darren Cocco\n */\ndefine(['core/pubsub', 'tool_realtime/events', 'tool_realtime/api'], function(PubSub, RealTimeEvents,api) {\n\n    var params;\n    var channels = [];\n    var requestscounter = [];\n    var pollURL;\n    var ajax = new XMLHttpRequest(), json;\n    var failureCount = 0;\n    var maxTimeout = 300000;\n\n    var checkRequestCounter = function() {\n        var curDate = new Date(),\n            curTime = curDate.getTime();\n        requestscounter.push(curTime);\n        requestscounter = requestscounter.slice(-10);\n        // If there were 10 requests in less than 5 seconds, it must be an error. Stop polling.\n        if (requestscounter.length >= 10 && curTime - requestscounter[0] < 5000) {\n            PubSub.publish(RealTimeEvents.CONNECTION_LOST);\n            return false;\n        }\n        return true;\n    };\n\n    var poll = function() {\n        if (!checkRequestCounter()) {\n            // Too many requests, stop polling.\n            return;\n        }\n        ajax.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                if (this.status === 200) {\n                    failureCount = 0;\n                    try {\n                        json = JSON.parse(this.responseText);\n                    } catch {\n                        setTimeout(poll, params.timeout);\n                        return;\n                    }\n                    if (!json.success || json.success !== 1) {\n                        failureCount++;\n                        // Pick the smallest between the e ^ failures * normalTimeout OR maxTimeout\n                        var multiplier = Math.min(Math.trunc(Math.pow(Math.E, failureCount) * params.timeout),\n                            maxTimeout);\n                        setTimeout (poll, multiplier);\n                        return;\n                    }\n\n                    // Process results - trigger all necessary Javascript/jQuery events.\n                    var events = json.events;\n                    for (var i in events) {\n                        PubSub.publish(RealTimeEvents.EVENT, events[i]);\n                        // Remember the last id.\n                        params.fromid = events[i].index;\n                    }\n                    // And start polling again.\n                    setTimeout(poll, params.timeout);\n                } else {\n                    // Must be a server timeout or loss of network - start new process.\n                    setTimeout(poll, params.timeout);\n                }\n            }\n        };\n        var url = pollURL + '?userid=' + encodeURIComponent(params.userid) + '&token=' +\n            encodeURIComponent(params.token) + '&fromid=' + encodeURIComponent(params.fromid);\n\n        if(channels.length <= 0) {\n            return;\n        }\n\n        var contextstring = \"\";\n        var componentstring = \"\";\n        var areastring = \"\";\n        var itemidstring = \"\";\n        var fromtimestampstring = \"\";\n\n        for (var i = 0; i < channels.length; i++) {\n            if (i == channels.length - 1) {\n                contextstring += channels[i].context;\n                componentstring += channels[i].component;\n                areastring += channels[i].area;\n                itemidstring += channels[i].itemid;\n                fromtimestampstring += channels[i].fromtimestamp;\n            } else {\n                contextstring += channels[i].context + '-';\n                componentstring += channels[i].component + '-';\n                areastring += channels[i].area + '-';\n                itemidstring += channels[i].itemid + '-';\n                fromtimestampstring += channels[i].fromtimestamp + '-';\n            }\n        }\n\n        var channelstring = '&channel=' + contextstring + ':'\n                                        + componentstring + ':'\n                                        + areastring + ':'\n                                        + itemidstring + ':'\n                                        + fromtimestampstring;\n\n        url += channelstring;\n\n        ajax.open('GET', url, true);\n        ajax.send();\n    };\n\n    var plugin =  {\n        init: function(userId, token, pollURLParam, timeout) {\n            if (params && params.userid) {\n                // Log console dev error.\n            } else {\n                params = {\n                    userid: userId,\n                    token: token,\n                    timeout: timeout,\n                };\n            }\n            pollURL = pollURLParam;\n            api.setImplementation(plugin);\n        },\n        subscribe: function(context, component, area, itemid, fromId, fromTimeStamp) {\n            params.fromid = fromId;\n            var channeltosubto = {\n                                    context: context,\n                                    component: component,\n                                    area: area,\n                                    itemid: itemid,\n                                    fromtimestamp: fromTimeStamp,\n                                };\n            if(channeltosubto) {\n                channels.push(channeltosubto);\n            }\n            setTimeout(poll, params.timeout);\n        }\n    };\n    return plugin;\n});\n"],"file":"realtime.min.js"}