define("realtimeplugin_phppoll/realtime",["tool_realtime/api"],(function(api){const phpPollPrototype={pollType:{short:1,long:2},ajaxOnReadyStateChange:self=>function(){if(this.readyState===XMLHttpRequest.DONE){if(200===this.status)try{let json=JSON.parse(this.responseText);if(json.error)self.errorCounter++;else{let events=json.events;for(let i in events)api.publish(events[i]),self.params.lastIdSeen=Number(events[i].id);self.errorCounter=0}}catch{self.errorCounter++}else self.errorCounter++;self.resetTimeout(),self.queueNextPoll()}},poll(){if(this.channels<1)return;this.errorCounter>this.params.maxFailures&&api.connectionFailure();let url=this.pollURL+"?userid="+encodeURIComponent(this.params.userid)+"&token="+encodeURIComponent(this.params.token)+(-1===this.params.lastIdSeen?"&since="+encodeURIComponent(this.params.earliestMessageCreationTime):"&lastidseen="+encodeURIComponent(this.params.lastIdSeen));this.ajax.open("GET",url,!0),this.ajax.send()},queueNextPoll(){this.timeout||(this.timeout=setTimeout(this.poll.bind(this),Math.max(2**this.errorCounter*1e3,this.params.maxDelay)))},resetTimeout(){this.timeout=null},init(userId,token,pollURLParam,maxDelay,maxFailures,earliestMessageCreationTime,pollType){this.params&&this.params.userid||(this.params={userid:userId,token:token,maxDelay:maxDelay,maxFailures:maxFailures,earliestMessageCreationTime:earliestMessageCreationTime,lastIdSeen:-1,pollType:"short"===pollType?pollType.short:pollType.long}),this.pollURL=pollURLParam,this.ajax.onreadystatechange=this.ajaxOnReadyStateChange(this),api.setImplementation(pub)},subscribe(){this.channels++,this.queueNextPoll()}};function PhpPoll(){this.params=null,this.channels=0,this.pollURL=null,this.ajax=new XMLHttpRequest,this.json=null,this.timeout=null,this.errorCounter=0}Object.assign(PhpPoll.prototype,phpPollPrototype);let instance=new PhpPoll,pub={init:(userId,token,pollURLParam,maxDelay,maxFailures,earliestMessageCreationTime,pollType)=>{instance.init(userId,token,pollURLParam,maxDelay,maxFailures,earliestMessageCreationTime,pollType)},subscribe:()=>{instance.subscribe()}};return pub}));

//# sourceMappingURL=realtime.min.js.map