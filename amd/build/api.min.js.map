{"version":3,"sources":["../src/api.js"],"names":["define","document","listofchannels","setImplementation","plugin","totalchannels","delegatedplugin","length","i","channeltosub","shift","subscribe","context","component","area","itemid","fromid","fromtimestamp","fromId","fromTimeStamp","Date","getTime","channel","push","getPlugin"],"mappings":"AAOAA,OAAM,qBAAC,CAAC,aAAD,CAAgB,sBAAhB,CAAD,CAA0C,UAAiC,CAE7EC,QAAQ,CAACC,cAAT,CAA0B,EAA1B,CAEA,MAAO,CACHC,iBAAiB,CAAE,2BAASC,CAAT,CAAiB,CAChC,GAAIC,CAAAA,CAAJ,CACAJ,QAAQ,CAACK,eAAT,CAA2BF,CAA3B,CAEA,GAAG,CAACH,QAAQ,CAACC,cAAb,CAA6B,CACzB,MACH,CACDG,CAAa,CAAGJ,QAAQ,CAACC,cAAT,CAAwBK,MAAxC,CAEA,GAAoB,CAAhB,CAAAF,CAAJ,CAAuB,CACnB,IAAK,GAAIG,CAAAA,CAAC,CAAG,CAAR,CACGC,CADR,CAAgBD,CAAC,CAAGH,CAApB,CAAmCG,CAAC,EAApC,CAAwC,CAChCC,CADgC,CACjBR,QAAQ,CAACC,cAAT,CAAwBQ,KAAxB,EADiB,CAEpCT,QAAQ,CAACK,eAAT,CAAyBK,SAAzB,CAAoCF,CAAY,CAACG,OAAjD,CACoCH,CAAY,CAACI,SADjD,CAEoCJ,CAAY,CAACK,IAFjD,CAGoCL,CAAY,CAACM,MAHjD,CAIoCN,CAAY,CAACO,MAJjD,CAKoCP,CAAY,CAACQ,aALjD,CAMH,CACJ,CACJ,CArBE,CAsBHN,SAAS,CAAE,mBAASC,CAAT,CAAkBC,CAAlB,CAA6BC,CAA7B,CAAmCC,CAAnC,CAA0E,IAA/BG,CAAAA,CAA+B,wDAAvB,CAAuB,CAApBD,CAAoB,wDAAJ,CAAC,CAAG,CAC7EE,CAAa,CAAGF,CAD6D,CAGjF,GAAa,CAAV,EAAAC,CAAH,CAAgB,CACZC,CAAa,CAAG,GAAIC,CAAAA,IAAJ,EAAD,CAAWC,OAAX,EAClB,CAGD,GAAIpB,QAAQ,CAACK,eAAb,CAA8B,CAE1BL,QAAQ,CAACK,eAAT,CAAyBK,SAAzB,CAAmCC,CAAnC,CAA4CC,CAA5C,CAAuDC,CAAvD,CAA6DC,CAA7D,CAAqEG,CAArE,CAA6EC,CAA7E,CACH,CAHD,IAGO,CAEH,GAAIG,CAAAA,CAAO,CAAG,CACVV,OAAO,CAAEA,CADC,CAEVC,SAAS,CAAEA,CAFD,CAGVC,IAAI,CAAEA,CAHI,CAIVC,MAAM,CAAEA,CAJE,CAKVC,MAAM,CAAEE,CALE,CAMVD,aAAa,CAAEE,CANL,CAAd,CASAlB,QAAQ,CAACC,cAAT,CAAwBqB,IAAxB,CAA6BD,CAA7B,CACH,CAEJ,CA/CE,CAgDHE,SAAS,CAAE,oBAAW,CAClB,MAAOvB,CAAAA,QAAQ,CAACK,eACnB,CAlDE,CAoDV,CAxDK,CAAN","sourcesContent":["/**\n * Real time events\n *\n * @module     tool_realtime/events\n * @package    tool_realtime\n * @copyright  2020 Marina Glancy\n */\ndefine(['core/pubsub', 'tool_realtime/events'], function(PubSub, RealTimeEvents) {\n\n    document.listofchannels = [];\n\n    return {\n        setImplementation: function(plugin) {\n            var totalchannels;\n            document.delegatedplugin = plugin;\n            // in here check list to subscribe once plugin has been set\n            if(!document.listofchannels) {\n                return;\n            }\n            totalchannels = document.listofchannels.length;\n\n            if (totalchannels > 0) {\n                for (var i = 0; i < totalchannels; i++) {\n                    var channeltosub = document.listofchannels.shift();\n                    document.delegatedplugin.subscribe( channeltosub.context,\n                                                        channeltosub.component,\n                                                        channeltosub.area,\n                                                        channeltosub.itemid,\n                                                        channeltosub.fromid,\n                                                        channeltosub.fromtimestamp);\n                }\n            }\n        },\n        subscribe: function(context, component, area, itemid, fromId= 0, fromtimestamp = -1) {\n            var fromTimeStamp = fromtimestamp;\n\n            if(fromId == 0) {\n                fromTimeStamp= (new Date).getTime();\n            }\n\n            // Check that plugin implementation has been set.\n            if (document.delegatedplugin) {\n                //  conditional for plugin being set\n                document.delegatedplugin.subscribe(context, component, area, itemid, fromId, fromTimeStamp);\n            } else {\n                // Channel object to store in list\n                var channel = {\n                    context: context,\n                    component: component,\n                    area: area,\n                    itemid: itemid,\n                    fromid: fromId,\n                    fromtimestamp: fromTimeStamp\n                };\n                // push channel to list\n                document.listofchannels.push(channel);\n            }\n\n        },\n        getPlugin: function() {\n            return document.delegatedplugin;\n        }\n    };\n});\n"],"file":"api.min.js"}